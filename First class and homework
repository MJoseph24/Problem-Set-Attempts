//#1
let randomNum = Math.random();
if (randomNum % 7 === 0 && randomNum % 9 === 0) {
 console.log('success');
} else {
 console.log('failure');
}

//#2
let grade = Math.random() * 100;
console.log(grade);
grade = grade >= 90 && grade <= 100 ? grade = 'A' : grade >= 80 && grade < 90 ? grade = 'B' : grade >= 70 && grade < 80 ? grade = 'C' : grade = 'D';
console.log(grade);

//#3
function arithmetic(p1, p2) {
  return p1 + p2;
}
const sum1 = arithmetic(20, 20);
console.log(sum1);

//#4
let arithmetic = (p1, p2) => p1 + p2;
const sum1 = arithmetic(20, 20);
console.log(sum1);

//#5
const colors = ["blue", "orange", "yellow", "green", "violet", "indigo", "red", "purple", "pink", "black", "gray", "white", "maroon", "brown", "turqoise"];
console.log (colors.length);
console.log (colors[0]);
console.log(colors[14]);
console.log(colors[Math.floor(Math.random() * colors.length)]);
colors.sort();
colors.push("teal");
colors.push(2);

//#6
let numbers = Array.from({length: 59}, () => Math.floor(Math.random() * 59) + 29);
function maxDistance(array) {
let greatestDist = 0;
for(let i = 0; i < array.length; i++) {
for(let j = i + 1; j < array.length; j++) {
if(array[i] > array[j]) {
let one = array[i];
array[i] = array[j];
array[j] = one;
}
}
}
greatestDist = array[array.length - 1] - array[0];
return greatestDist;
}
console.log(maxDistance(numbers));

//#7 
let numbers = Array.from({length: 59}, () => Math.floor(Math.random() * 59) + 29);
function maxDistance(array) {
let greatestDist = 0;
for(let i = 0; i < array.length; i++) {
for(let j = i + 1; j < array.length; j++) {
if(array[i] > array[j]) {
let one = array[i];
array[i] = array[j];
array[j] = one;
}
}
}
greatestDist = array[array.length - 1] - array[0];
return greatestDist;
}
console.log(maxDistance(numbers));
const firstMap = numbers.map(x => x * x);
console.log(firstMap);

//#8
let numbers = Array.from({length: 59}, () => Math.floor(Math.random() * 59) + 29);
const firstMap = numbers.map(x => x * x);
for(let i = 0; i < firstMap.length; i++) {
for(let j = i + 1; j < firstMap.length; j++) {
if(firstMap[i] > firstMap[j]) {
let one = firstMap[i];
firstMap[i] = firstMap[j];
firstMap[j] = one;
}
}
}
greatestNum = firstMap[firstMap.length - 1];
const newNumbers = firstMap.filter(int => int > (greatestNum / 2));
console.log(newNumbers);

//#9
let numbers = Array.from({length: 59}, () => Math.floor(Math.random() * 59) + 29);
const firstMap = numbers.map(x => x * x);
for(let i = 0; i < firstMap.length; i++) {
for(let j = i + 1; j < firstMap.length; j++) {
if(firstMap[i] > firstMap[j]) {
let one = firstMap[i];
firstMap[i] = firstMap[j];
firstMap[j] = one;
}
}
}
greatestNum = firstMap[firstMap.length - 1];
const newNumbers = firstMap.filter(int => int > (greatestNum / 2));
const newNewNumbers = newNumbers.reduce((x, y) => x + y)
console.log(newNewNumbers);

//#10
let numbers = Array.from({length: 59}, () => Math.floor(Math.random() * 59) + 29);
const firstMap = numbers.map(x => x * x);
for(let i = 0; i < firstMap.length; i++) {
for(let j = i + 1; j < firstMap.length; j++) {
if(firstMap[i] > firstMap[j]) {
let one = firstMap[i];
firstMap[i] = firstMap[j];
firstMap[j] = one;
}
}
}
greatestNum = firstMap[firstMap.length - 1];
const newNumbers = firstMap.filter(int => int > (greatestNum / 2));
const newNewNumbers = newNumbers.reduce((x, y) => x + y)
let counter = 0;
newNumbers.forEach(int => {
console.log(counter + ' ' + '[' + int + ']')
counter++;
})

//#11
class Meal {
constructor(meal) {
this.meal = meal;
this.time = 9;
this.size = 'big';
}
toString() {
return [this.meal, this.time, this.size];
}
}
var firstMeal = new Meal('breakfast');
console.log(firstMeal.toString());

//#2
